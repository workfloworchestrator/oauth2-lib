name: Test python package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        pydantic-version: ['1.*', '2.*']
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flit
          flit install --deps develop
          pip install -U "pydantic==${{ matrix.pydantic-version }}"
          pip install pydantic_settings || true
      - name: Check formatting
        run: |
          black --check .
      - name: Lint with ruff
        run: |
          ruff check .
      - name: MyPy
        run: |
          mypy -p oauth2_lib
      - name: License headers
        run: |
          apache-license-check --copyright "2019-`date +%Y` SURF" oauth2_lib
      - name: Test with pytest
        run: |
          pytest -vvv --cov-branch --cov-fail-under=80 --cov=oauth2_lib --cov-config=.coveragerc
        env:
          COVERAGE_FILE: reports/.coverage.${{ matrix.python-version }}
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ matrix.pydantic-version == '2.*' }} && ${{ always() }}
  coverage-combine:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - name: Get coverage files
        uses: actions/download-artifact@v3
        with:
          name: reports
          path: reports
      - run: pip install coverage[toml]
      - run: ls -la reports
      - run: coverage combine reports
      - run: coverage report
      - run: coverage xml
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage.xml
